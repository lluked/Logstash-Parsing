filter {

    if [type] == "exim" {

        # Extract fields
        grok {
            # message arrival
            match => {"message" => "%{EXIM_MESSAGE_ARRIVAL}"}
            # message delivery
            match => {"message" => "%{EXIM_DATE:exim_date} %{EXIM_MSGID:exim_msgid} %{EXIM_FLAGS:exim_flags} %{EMAILADDRESS:exim_delivery_email} %{GREEDYDATA}"}
            # Catch remaining
            match => {"message" => "%{EXIM_DATE:exim_date} %{EXIM_MSGID:exim_msgid} %{EXIM_FLAGS:exim_flags} %{GREEDYDATA}"}
            match => {"message" => "%{EXIM_DATE:exim_date} %{EXIM_MSGID:exim_msgid} %{GREEDYDATA}"}
        }

        # Add undefined state
        mutate {
            add_field => { "exim_msg_state" => "undefined" }
        }
        # Update message state
        if [exim_flags] == "<=" {
            mutate {
                update => [ "exim_msg_state", "message arrival" ] 
            }
        } else if [exim_flags] == "(=" {
            mutate {
                update => [ "exim_msg_state", "message fakereject" ] 
            }
        } else if [exim_flags] == "=>" {
            mutate {
                update => [ "exim_msg_state", "normal message delivery" ] 
            }
        } else if [exim_flags] == "->" {
            mutate {
                update => [ "exim_msg_state", "additional address in same delivery" ]
            }
        } else if [exim_flags] == ">>" {
            mutate {
                update => [ "exim_msg_state", "cutthrough message delivery" ]
            }
        } else if [exim_flags] == "*>" {
            mutate {
                update => [ "exim_msg_state", "delivery suppressed by -N" ]
            }
        } else if [exim_flags] == "**" {
            mutate {
                update => [ "exim_msg_state", "delivery failed; address bounced" ]
            }
        } else if [exim_flags] == "==" {
            mutate {
               update => [ "exim_msg_state", "delivery deferred; temporary problem" ]
            }
        } else if "Completed QT=" in [message] {
            mutate {
                update => [ "exim_msg_state", "completed" ]
            }
        } else if [message] =~ /(rejected after DATA)/ {
            mutate {
                update => [ "exim_msg_state", "rejected_after_data" ]
            }
        } else if " rejected " in [message] {
            mutate {
                update => [ "exim_msg_state", "rejected_smtp_transaction" ]
            }
        }

        # Drop non-actioned retries
        if [exim_flags] == "==" and "retry time not reached" in [message] {
            drop { }
        }

    }
}
