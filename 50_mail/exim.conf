#   pipeline.ecs_compatibility: v1
filter {

    if [type] == "exim" {

        # Extract fields
        grok {
            # message arrival
            match => {"message" => "%{EXIM_MESSAGE_ARRIVAL}"}
            # message delivery
            match => {"message" => "%{EXIM_DATE:timestamp} %{EXIM_MSGID:[exim][log][message][id]} (%{EXIM_FLAGS:[exim][log][flag]} )?(%{EMAILADDRESS:[exim][log][delivery][email]} )?"}
        }

        # Add undefined state
        mutate {
            add_field => { "[exim][log][msg][state]" => "undefined" }
        }
        # Update message state
        if [exim][log][flag] == "<=" {
            mutate {
                update => [ "[exim][log][msg][state]", "message arrival" ] 
            }
        } else if [exim][log][flag] == "(=" {
            mutate {
                update => [ "[exim][log][msg][state]", "message fakereject" ] 
            }
        } else if [exim][log][flag] == "=>" {
            mutate {
                update => [ "[exim][log][msg][state]", "normal message delivery" ] 
            }
        } else if [exim][log][flag] == "->" {
            mutate {
                update => [ "[exim][log][msg][state]", "additional address in same delivery" ]
            }
        } else if [exim][log][flag] == ">>" {
            mutate {
                update => [ "[exim][log][msg][state]", "cutthrough message delivery" ]
            }
        } else if [exim][log][flag] == "*>" {
            mutate {
                update => [ "[exim][log][msg][state]", "delivery suppressed by -N" ]
            }
        } else if [exim][log][flag] == "**" {
            mutate {
                update => [ "[exim][log][msg][state]", "delivery failed; address bounced" ]
            }
        } else if [exim][log][flag] == "==" {
            mutate {
               update => [ "[exim][log][msg][state]", "delivery deferred; temporary problem" ]
            }
        } else if "Completed QT=" in [message] {
            mutate {
                update => [ "[exim][log][msg][state]", "completed" ]
            }
        } else if [message] =~ /(rejected after DATA)/ {
            mutate {
                update => [ "[exim][log][msg][state]", "rejected_after_data" ]
            }
        } else if " rejected " in [message] {
            mutate {
                update => [ "[exim][log][msg][state]", "rejected_smtp_transaction" ]
            }
        }

        # Drop non-actioned retries
        if [exim][log][flag] == "==" and "retry time not reached" in [message] {
            drop { }
        }

    }
}
